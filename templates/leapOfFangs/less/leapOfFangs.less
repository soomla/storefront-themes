@import "css/mixins/bootstrap/variables.less";
@import "css/mixins/bootstrap/mixins.less";
@import "css/mixins/layout.less";
.webkitScrollbar();


// THEME VARIABLES
// --------------------------------------------------

@externalWidth: 720px;
@externalHeight: 1280px;
@headerHeight: 220px;
@categoriesHeight: 860px;
@visualHeight: 420px;
@maxCategories: 10;


.centeredBackground {
    .background-size(cover);
    background-position: center;
    background-repeat: no-repeat;
}

// GENERAL LAYOUT
// --------------------------------------------------

ul {
    padding: 0;
    margin: 0;
    list-style-type: none;
}

#main {
    .box(horizontal, center, center);
}

// Holds all the content i.e. header, categories, footer
#content-container {
    height: @externalHeight;
    width: @externalWidth;
}

#header {
    @padding: 10px;
    height: @headerHeight - (2 * @padding);
    padding: @padding;
    .box;

    #title-container {
        width: 400px;
        .box(vertical);

        #quit img{
            .maxSize(50px, 150px);
        }

        h1 {
            .box-flex(1);
            .box(vertical, center);
            font-size: 60px;
            line-height: 70px;
            text-align: center;
        }
    }
}

#balance-container {
    @currencyPadding: 2px;
    @headerInternalHeight: 120px;
    @height: (@headerInternalHeight / 2) - (2 * @currencyPadding);

    .box(vertical, center);
    .box-flex(1);

    // Allow several currencies
    .label-container {
        padding: @currencyPadding 0;
        max-height: @height;
        .box-flex(1);
        text-align: right;
        font-size: @height;
        font-weight: bold;
        line-height: @height;

        label {
            vertical-align: middle;
        }
    }

    // Currency image shouldn't overflow - same height as container
    .currency {
        max-height: @height;
    }
}


#footer {
    padding: 20px;
}

// In case a background image is applied, center it and don't repeat it
#main, #content-container, #header, #footer, #categories {
    .centeredBackground;
}


// SINGLE LIST ITEMS - VIRTUAL GOODS
// --------------------------------------------------

.goods {
    height: 100%;
    z-index:50;
    position:relative;
    overflow: hidden;
}
.goods .item {

    @priceContainerHeight: 160px;
    @descriptionHeight: 280px;
    @actionPaddingTop: 10px;
    width:100%;
    height: 100%;
    .box-sizing(border-box);
    overflow: hidden;
    .centeredBackground;
    display: block;
    position: absolute;
    //border:1px solid red;
    top:0;
    left:-100%;

    .visual {
        height: @visualHeight;
        text-align: center;
    }

    .buy-container {
        height: @priceContainerHeight;
        text-align: center;
        padding-top: @actionPaddingTop;
        font-size: 44px;
        line-height: 50px;

        .info {
            .box(vertical);
            display: inline-block;
            margin-left: 10px;
            vertical-align: middle;
        }
    }

    .description-container {
        @padding: 20px;
        height: @descriptionHeight - (2 * @padding);
        padding: @padding;
        .box(vertical, center);
        font-size: 24px;
        line-height: 30px;

        h1 {
            font-size: 44px;
            line-height: 50px;
        }
    }

    .equip, .active {
        display: block;
        margin: 0 auto;
        padding-top: @actionPaddingTop;
    }
    &.isOn{
        .transition(all 0.3s ease);
        left:0;
    }
    &.appearRightTransition{
        .transition(all 0.3s ease);
        left:100%;
    }
    &.appearRightImmediately{
        .transition(all 0s ease);
        left:100%;
    }
    &.appearLeftTransition{
        .transition(all 0.3s ease);
        left:-100%;
    }
    &.appearLeftImmediately{
        .transition(all 0s ease);
        left:-100%;
    }
	// Add specific styling for equippable items
    &.equippable {

    	// State: not owned
        .equip, .active {
            display: none;
        }

    	// State: owned, not equipped
        &.owned {
            .equip {
                display: block;
            }
            .buy {
                display: none;
            }

            .buy-container {
                display: none;
            }

        	// State: owned and equipped
            &.equipped {
                .equip {
                    display: none;
                }
                .active {
                    display: block;
                }
            }
        }
    }

}


// CATEGORY MENU
// --------------------------------------------------

#menus-container {
    overflow: hidden;
    display: inline-block;
}

#category-menu, #currency-menu {
    height: 200px;
    float: left;

    li {
        float: left;
        margin-right: 20px;
        img {
            .square(100px);
        }
    }
}
#categories {
    height: @categoriesHeight;
    position: relative;
    overflow: hidden;
}
#categories > div{
    width:100%;
    height: @categoriesHeight;
    position:absolute;
    left:0;
    top:0;
    .transition(all 0.3s ease);
}

.catClass (@index) when (@index > 0) {
    @ind : (-1 * @index);
    (~"#categories > div.cat-@{index}"){
        left: percentage(@ind);
    }
    .catClass(@index - 1);
}
.catClass (0) {}
.catClass (@maxCategories);

// The cateogries behave like a tab.  It's displayed only when it's active
.category {
    width:100%;
    height: 100%;
    position:absolute;
    left:0;
    top:0;
    z-index: 10;
    .box(vertical, center);
    // When a category (tab) is active, this will show it and lay it out as a flex box
    &.active {

    }

    // Define absolute locations for previous / next buttons
    .next, .previous {
        position: absolute;
        top: 100;
        width: 100px;
        height: @visualHeight;
    }
    .next {
        right: 0;
        z-index:100;
    }
    .previous {
        left: 0;
        z-index:110;
    }
}
.categoryClass (@index) when (@index > 0) {
    @ind : (@index + 1);
    .category:nth-child(@ind) {
        left: percentage(@index);
    }
    .categoryClass(@index - 1);
}
.categoryClass (0) {}
.categoryClass (@maxCategories);

// MODAL DIALOG
// --------------------------------------------------
.modal {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    .box(horizontal, center, center);
    z-index: 2001;
    background: rgba(0, 0, 0, 0.6);
}

.dialog {
    text-align: center;
    width: 540px;
    height: 300px;
    .box(vertical, center, center);

    h1 {
        font-size: 28px;
        text-align: center;
        width: 480px;
    }

    .actions {
        margin-top: 10px;
        img {
            .maxSize(80px, 260px);
        }
    }
}
